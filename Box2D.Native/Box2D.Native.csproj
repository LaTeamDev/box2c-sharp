<!--Based on https://github.com/chrisdill/raylib-cs/blob/master/Raylib-cs.Native/Raylib-cs.Native.csproj, licensed under zlib license -->
<Project Sdk="Microsoft.NET.Sdk" InitialTargets="ConfigureNative">
    <Import Project="../build.props" />
    <PropertyGroup>
        <TargetFramework>netstandard1.0</TargetFramework>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <NoWarn>CS2008</NoWarn>
        <Version>$(BindingsVersion)</Version>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
        <NativeExt>so</NativeExt>
        <NativePre>lib</NativePre>
        <NativeArch>x64</NativeArch>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
        <NativeExt>dylib</NativeExt>
        <NativePre>lib</NativePre>
        <NativeArch Condition="$(BuildArch) == ''">x86_x64</NativeArch>
        <NativeArch Condition="$(BuildArch) != ''">$(BuildArch)</NativeArch>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
        <NativeExt>dll</NativeExt>
        <NativePre>$(Configuration)/</NativePre>
        <NativeArch Condition="$(BuildArch) == ''">x64</NativeArch>
        <NativeArch Condition="$(BuildArch) != ''">$(BuildArch)</NativeArch>
    </PropertyGroup>

    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) AND $(NativeArch) == 'arm64'">
        <CMakeArgs Include="-D CMAKE_OSX_ARCHITECTURES=arm64" />
    </ItemGroup>

    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) AND $(NativeArch) == 'x86_64'">
        <CMakeArgs Include="-D CMAKE_OSX_ARCHITECTURES=x86_64" />
    </ItemGroup>

    <ItemGroup Condition="$([MSBuild]::IsOsPlatform('Windows')) AND $(NativeArch) == 'win32'">
        <CMakeArgs Include="-A win32" />
    </ItemGroup>

    <ItemGroup Condition="$([MSBuild]::IsOsPlatform('Windows')) AND $(NativeArch) == 'x64'">
        <CMakeArgs Include="-A x64" />
    </ItemGroup>

    <ItemGroup>
        <Content 
                Include="$(OutputPath)Native/box2c/$(NativePre)box2d.$(NativeExt)"
                Link="runtimes/%(RecursiveDir)/%(Filename)%(Extension)"
                CopyToOutputDirectory="PreserveNewest" 
                Condition="Exists('$(OutputPath)Native/box2c/$(NativePre)box2d.$(NativeExt)')" />

        <CMakeArgs Include="-B$(OutputPath)native" />
        <CMakeArgs Include="-S../Native/box2c" />
        <CMakeArgs Include="-DCMAKE_BUILD_TYPE=$(Configuration)" />
        <CMakeArgs Include="-DBUILD_SHARED_LIBS=ON" />
        <CMakeArgs Include="-DBOX2D_SAMPLES=OFF" />
    </ItemGroup>

    <Target Name="ConfigureNative" Condition="$(SkipLocalBuild) != true">
        <Exec Command="cmake @(CMakeArgs, ' ') $(CMakeExtraArgs)" Condition="!Exists('$(BaseIntermediateOutputPath)Native/CMakeCache.txt')" />

        <Exec Command="cmake --build $(OutputPath)native --config $(Configuration)" />
    </Target>
</Project>